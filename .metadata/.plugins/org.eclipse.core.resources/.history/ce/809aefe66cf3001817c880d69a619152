import java.util.Scanner;

public class Puissance4 {
	
	private final static int VIDE = 0 ;
	private final static int JAUNE = 1 ;
	private final static int ROUGE = 2;
	
	static Scanner question = new Scanner (System.in);
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	
		int[][] grille = new int [6][7];
		int couleurJoueur = JAUNE;
		initialise(grille);
		affiche(grille);
			
		do { if (couleurJoueur == JAUNE ) {
			System.out.println(" Joueur X : entrez un numero de colonne "); }
		else {
			System.out.println(" Joueur O : entrez un numero de colonne "); 
		}
			int colonne = question.nextInt();
			--colonne;
			
			boolean valide = joue(grille, colonne, couleurJoueur);
			if ( !valide ) { System.out.println(" >Ce coup n'est pas valide !!<");
			}
			affiche(grille);
			couleurJoueur = permutte(couleurJoueur);
			
		} while (true);
		
	}
	// initialisation de la grille , en mettant 0 dans chaque case, donc des cases vides
	static void initialise (int[][] grille) {
		
		for ( int i = 0; i < grille.length ; ++i) {
			for ( int j = 0 ; j < grille[0].length ; ++j){
				grille[i][j] = VIDE;
			}
		}
	}
	//affiche O pour une case rouge , X pour une case jaune et un espace pour une case vide
	static void affiche (int[][] grille){
		System.out.println();
		for ( int[] ligne : grille) {
			System.out.print('|');
			for ( int cellule : ligne) {
				if ( cellule == VIDE) {
					System.out.print(' '); }
				else if ( cellule == ROUGE) {
					System.out.print('O'); }
				else  {
					System.out.print('X'); }
				System.out.print('|');
				}
			
			System.out.println();
			}
		
		//System.out.println('=');
		for ( int i = 1 ; i <=grille[0].length; ++i)
		{
			System.out.print("="+i);
		}	System.out.println("=\n");
		}
	
	static boolean  joue(int[][] grille, int colonne, int couleur)

	{	// on parcourt la colonne en partant du bas jusqu'a trouver une case vide ou jusqu'en haut
		int ligne = grille.length-1;
		
		while( (ligne >=0) && grille[ligne][colonne]!= VIDE) {
			--ligne;
		}
		// si on n'eat pas arrivé jusqu'en haut de la colonne, on remplit la case vide trouvée
		// sinon c'est que la colonne est pleine et le coup n'est pas valide.
		if (ligne >=0) {
		grille[ligne][colonne]= couleur; 
		return true ;
		} else {
		return false;
		}
		
	}
	
	static int permutte(int couleurJoueur) {
		if (couleurJoueur == JAUNE) {return ROUGE; }
		else { return JAUNE; }
	}
	}

